# --------------------------------------------------------
# application-dev.yml
# --------------------------------------------------------

server:
  port: 8080
  shutdown: graceful

r2dbc:
  url: r2dbc:h2:mem:///testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  username: sa
  password:
  initialization-mode: always
  sql:

    management:
      endpoints:
        web:
          exposure:
            include: "health,info,metrics,prometheus"
      endpoint:
        health:
          validate-group-membership: true
          group:
            readiness:
              include: "db,diskSpace"
            liveness:
              include: "ping"
          show-details: always
          show-components: always

    spring:
      h2:
        console:
          enabled: true
          path: /h2-console
      r2dbc:
        url: r2dbc:h2:mem:///testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
        username: sa
        password:

    logging:
      level:
        com.resilient: DEBUG
        org.springframework.boot.actuate.health: DEBUG

auth:
  demo:
    user: devuser
    pass-hash: $2a$10$Dow1jZz8LRx.9Z/9Bf4fEuCcoYI9Y1VtWc2Sbl3hM3Pph7XnJbI1G

security: # <-- All security properties should be nested here
  jwt:
    secret: devjwtsecretkey_8f2b1c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a
    issuer: https://auth.dev.resilient.com # It's good practice to have a dev-specific issuer
    audience: ${JWT_AUDIENCE:resilient-app,admin-portal}
    claims:
      role: USER
      email: testuser@example.com

webhook:
  secret: devwebhooksecret
  hmac-secret: devwebhookhmacsecret

logging:
  level:
    com.resilient: DEBUG
    io.github.resilience4j: DEBUG

reactor:
  debug: true

spring:
  sql:
    init:
      mode: always # Ensure schema.sql is executed during startup




