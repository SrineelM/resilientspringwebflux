
-- =====================================================================
-- SCHEMA: Resilient Spring WebFlux POC
-- This schema defines tables for users, authentication credentials, and
-- a generic outbox for reliable event/message publishing.
-- =====================================================================

-- =========================
-- USERS TABLE
-- =========================
-- Stores user profile and status information.
-- Each user has a unique username and email.
-- 'status' can be 'ACTIVE', 'INACTIVE', etc.
-- 'created_at' and 'updated_at' are managed by the DB for auditing.
DROP TABLE IF EXISTS users;
CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Unique user ID (auto-increment)
    username VARCHAR(50) NOT NULL UNIQUE,                   -- Unique username for login
    email VARCHAR(255) NOT NULL UNIQUE,                     -- Unique email address
    full_name VARCHAR(255) NOT NULL,                        -- Full name of the user
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',           -- User status (ACTIVE/INACTIVE)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when user was created
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP          -- Timestamp when user was last updated
);

-- =========================
-- USER CREDENTIALS TABLE
-- =========================
-- Stores authentication credentials, separate from user profile data.
-- Passwords are stored as BCrypt hashes.
-- 'roles' is a comma-separated string (e.g., 'USER,ADMIN').
-- 'enabled' indicates if the account is active for login.
DROP TABLE IF EXISTS user_credentials;
CREATE TABLE IF NOT EXISTS user_credentials (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Unique credential ID
    username VARCHAR(50) NOT NULL UNIQUE,                   -- Username (should match users.username)
    password_hash VARCHAR(255) NOT NULL,                    -- BCrypt hash of the password
    roles VARCHAR(255) NOT NULL DEFAULT 'USER',             -- Roles assigned to the user
    enabled BOOLEAN NOT NULL DEFAULT TRUE                   -- Is the account enabled?
);

-- =========================
-- MESSAGE OUTBOX TABLE
-- =========================
-- Implements the transactional outbox pattern for reliable message/event publishing.
-- Used for integration/event-driven architectures.
DROP TABLE IF EXISTS message_outbox;
CREATE TABLE IF NOT EXISTS message_outbox (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Unique outbox message ID
    aggregate_type VARCHAR(100) NOT NULL,                   -- Type of aggregate (e.g., 'User', 'Order')
    aggregate_id VARCHAR(100) NOT NULL,                     -- ID of the aggregate root
    event_type VARCHAR(100) NOT NULL,                       -- Type of event (e.g., 'UserCreated')
    payload TEXT NOT NULL,                                  -- Event/message payload (JSON or text)
    headers TEXT,                                           -- Optional headers (JSON or text)
    status VARCHAR(30) NOT NULL DEFAULT 'NEW',              -- Message status (NEW, PUBLISHED, etc.)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- When the message was created
    published_at TIMESTAMP                                  -- When the message was published (nullable)
);

-- =========================
-- SEED DATA FOR DEVELOPMENT
-- =========================
-- Insert sample users for development/testing.
INSERT INTO users (username, email, full_name, status) VALUES
('john.doe', 'john.doe@example.com', 'John Doe', 'ACTIVE');
INSERT INTO users (username, email, full_name, status) VALUES
('jane.smith', 'jane.smith@example.com', 'Jane Smith', 'ACTIVE');
INSERT INTO users (username, email, full_name, status) VALUES
('bob.wilson', 'bob.wilson@example.com', 'Bob Wilson', 'INACTIVE');

-- Insert sample credentials (password = 'password', BCrypt hash placeholder)
-- ONLY for dev/local environments. Do NOT use in production!
INSERT INTO user_credentials (username, password_hash, roles) VALUES
 ('john.doe', '{bcrypt}$2a$10$K0d9vQYpQ7h7JkQ0Yp5x4O0ZpQWcO9J3uQmV0xZp7YfFJ5Yd8Qm8G', 'USER'),
 ('jane.smith', '{bcrypt}$2a$10$K0d9vQYpQ7h7JkQ0Yp5x4O0ZpQWcO9J3uQmV0xZp7YfFJ5Yd8Qm8G', 'USER,ADMIN');
